[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Service Visit Register",
  "enabled": 1,
  "modified": "2024-02-16 14:17:28.154941",
  "module": "Sagarair APP",
  "name": "Service_Visit_Register",
  "script": "frappe.ui.form.on('Service Visit Register', {\n    refresh: function(frm) {\n        frm.add_custom_button(__('Calculate To Pay'), function() {\n            // Get the 'advancetaken' and 'total_expense' values\n            var advancetaken = frm.doc.advancetaken || 0;\n            var totalExpense = frm.doc.total_expense || 0;\n\n            // Calculate 'to_pay' by subtracting 'advancetaken' from 'total_expense'\n            var toPay = totalExpense - advancetaken;\n\n            // Update the 'to_pay' field\n            frm.set_value('to_pay', toPay);\n        });\n\n         // Add a custom button to trigger the calculation\n         frm.add_custom_button(__('Calculate Total Expense'), function() {\n            calculateTotalExpense(frm);\n        });\n\n        frm.fields_dict['service_visit_manday_reporting'].grid.get_field('technician_cost').get_query = function(doc, cdt, cdn) {\n            var row = locals[cdt][cdn];\n            return {\n                filters: {\n                    'monthly_wages': row.monthly_wages,\n                    'number_of_days_worked': row.number_of_days_worked,\n                    'extra_days_absent': row.extra_days_absent,\n                }\n            };\n        };\n\n        // Add a custom button to trigger the calculation\n        frm.add_custom_button(__('Calculate Total Service Cost'), function() {\n            calculateTotalServiceCost(frm);\n        });\n\n        // Add a custom button to trigger the calculation\n        frm.add_custom_button(__('Calculate Total Technician Cost'), function() {\n            calculateTotalTechnicianCost(frm);\n        });\n\n    },\n    sales_order_reference: function(frm) {\n        // Listen for changes in the Sales Order Reference field\n        // Fetch and set data when the Sales Order Reference changes\n        fetch_and_set_sales_order_data(frm);\n    }\n});\n\n\nfunction calculateTotalExpense(frm) {\n    let totalExpense = 0;\n\n    frm.doc.expense_reporting.forEach(function(row) {\n        totalExpense += row.cost || 0;\n    });\n\n    frm.set_value('total_expense', totalExpense);\n    frm.refresh_field('total_expense');\n}\n\n\nfunction fetch_and_set_sales_order_data(frm) {\n    var sales_order_reference = frm.doc.sales_order_reference;\n    if (sales_order_reference) {\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Sales Order',\n                name: sales_order_reference,\n                filters: {\n                    fields: ['items']\n                }\n            },\n            callback: function(r) {\n                if (r.message && r.message.items) {\n                    var items = r.message.items;\n                    var purpose_table = frm.doc.purposes || [];\n                    \n                    // Clear existing rows in the child table\n                    purpose_table.splice(0, purpose_table.length);\n                    \n                    // Loop through the fetched data and add it to the 'purposes' table\n                    $.each(items, function(i, item) {\n                        var child_row = frappe.model.add_child(frm.doc, 'Service Visit Purpose', 'purposes');\n                        child_row.item_code = item.item_code;\n                        child_row.item_name = item.item_name;\n                        child_row.description = item.description;\n                    });\n\n                    frm.refresh_field('purposes');\n                }\n            }\n        });\n    }\n}\n\nfunction calculateTotalServiceCost(frm) {\n    // Get the values of the custom fields\n    var totalTechnicianCost = frm.doc.total_technician_cost || 0;\n    var totalExpense = frm.doc.total_expense || 0;\n\n    // Calculate the total service cost\n    var totalServiceCost = totalTechnicianCost + totalExpense;\n\n    // Update the 'total_service_cost' field with the calculated total\n    frm.set_value('total_service_cost', totalServiceCost);\n    frm.refresh_field('total_service_cost');\n}\n\nfunction calculateTotalTechnicianCost(frm) {\n    let totalTechnicianCost = 0;\n\n    if (frm.doc.service_visit_manday_reporting){\n\n        frm.doc.service_visit_manday_reporting.forEach(function(row) {\n            totalTechnicianCost += row.technician_cost || 0;\n        });\n    }\n\n    frm.set_value('total_technician_cost', totalTechnicianCost);\n    frm.refresh_field('total_technician_cost');\n}\n\n\n\nfrappe.ui.form.on('Service Visit Manday Reporting', {\n    monthly_wages: function(frm, cdt, cdn) {\n        calculateTechnicianCost(frm, cdt, cdn);\n    },\n    number_of_days_worked: function(frm, cdt, cdn) {\n        calculateTechnicianCost(frm, cdt, cdn);\n    },\n    extra_days_absent: function(frm, cdt, cdn) {\n        calculateTechnicianCost(frm, cdt, cdn);\n    }\n});\n\nfunction calculateTechnicianCost(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    if (row.monthly_wages && row.number_of_days_worked && row.extra_days_absent) {\n        var mw = row.monthly_wages;\n        var nd = row.number_of_days_worked;\n        var ex = row.extra_days_absent;\n        var technician_cost = (mw / 26) * nd * 1.5 + ex * (mw / 26);\n        frappe.model.set_value(cdt, cdn, 'technician_cost', technician_cost);\n    } else {\n        frappe.model.set_value(cdt, cdn, 'technician_cost', 0);\n    }\n}\n",
  "view": "Form"
 }
]